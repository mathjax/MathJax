!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=15)}([function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.clearDocument=t.saveDocument=t.makeBsprAttributes=t.removeProperty=t.getProperty=t.setProperty=t.balanceRules=void 0;const n=o(10),r=o(4);let i=null,a=null,l=function(e){a.root=e;let{w:t}=i.outputJax.getBBox(a,i);return t},s=function(e){let t=0;for(;e&&!n.default.isType(e,"mtable");){if(n.default.isType(e,"text"))return null;n.default.isType(e,"mrow")?(e=e.childNodes[0],t=0):(e=e.parent.childNodes[t],t++)}return e},u=function(e,t){return e.childNodes["up"===t?1:0].childNodes[0].childNodes[0].childNodes[0].childNodes[0]},f=function(e,t){return e.childNodes[t].childNodes[0].childNodes[0]},c=function(e){return f(e,0)},d=function(e){return f(e,e.childNodes.length-1)},p=function(e,t){return e.childNodes["up"===t?0:1].childNodes[0].childNodes[0].childNodes[0]},m=function(e){for(;e&&!n.default.isType(e,"mtd");)e=e.parent;return e},h=function(e){return e.parent.childNodes[e.parent.childNodes.indexOf(e)+1]},y=function(e){for(;e&&null==t.getProperty(e,"inference");)e=e.parent;return e},P=function(e,t,o=!1){let r=0;if(e===t)return r;if(e!==t.parent){let i=e.childNodes,a=o?i.length-1:0;n.default.isType(i[a],"mspace")&&(r+=l(i[a])),e=t.parent}if(e===t)return r;let i=e.childNodes,a=o?i.length-1:0;return i[a]!==t&&(r+=l(i[a])),r},g=function(e,o=!1){let n=s(e),r=p(n,t.getProperty(n,"inferenceRule"));return P(e,n,o)+(l(n)-l(r))/2},b=function(e,o,i,a=!1){if(t.getProperty(o,"inferenceRule")||t.getProperty(o,"labelledRule")){const t=e.nodeFactory.create("node","mrow");o.parent.replaceChild(t,o),t.setChildren([o]),M(o,t),o=t}const l=a?o.childNodes.length-1:0;let s=o.childNodes[l];n.default.isType(s,"mspace")?n.default.setAttribute(s,"width",r.default.Em(r.default.dimen2em(n.default.getAttribute(s,"width"))+i)):(s=e.nodeFactory.create("node","mspace",[],{width:r.default.Em(i)}),a?o.appendChild(s):(s.parent=o,o.childNodes.unshift(s)))},M=function(e,o){["inference","proof","maxAdjust","labelledRule"].forEach(n=>{let r=t.getProperty(e,n);null!=r&&(t.setProperty(o,n,r),t.removeProperty(e,n))})};const x=function(e,o,n,i,a){let l=e.nodeFactory.create("node","mspace",[],{width:r.default.Em(a)});if("left"===i){let e=o.childNodes[n].childNodes[0];l.parent=e,e.childNodes.unshift(l)}else o.childNodes[n].appendChild(l);t.setProperty(o.parent,"sequentAdjust_"+i,a)},w=function(e,o){let n=o.pop();for(;o.length;){let r=o.pop(),[i,a]=_(n,r);t.getProperty(n.parent,"axiom")&&(x(e,i<0?n:r,0,"left",Math.abs(i)),x(e,a<0?n:r,2,"right",Math.abs(a))),n=r}},_=function(e,t){const o=l(e.childNodes[2]),n=l(t.childNodes[2]);return[l(e.childNodes[0])-l(t.childNodes[0]),o-n]};t.balanceRules=function(e){a=new e.document.options.MathItem("",null,e.math.display);let o=e.data;!function(e){let o=e.nodeLists.sequent;if(o)for(let n,r=o.length-1;n=o[r];r--){if(t.getProperty(n,"sequentProcessed")){t.removeProperty(n,"sequentProcessed");continue}let o=[],r=y(n);if(1===t.getProperty(r,"inference")){for(o.push(n);1===t.getProperty(r,"inference");){r=s(r);let e=c(u(r,t.getProperty(r,"inferenceRule"))),i=t.getProperty(e,"inferenceRule")?p(e,t.getProperty(e,"inferenceRule")):e;t.getProperty(i,"sequent")&&(n=i.childNodes[0],o.push(n),t.setProperty(n,"sequentProcessed",!0)),r=e}w(e,o)}}}(o);let n=o.nodeLists.inference||[];for(let e of n){let n=t.getProperty(e,"proof"),r=s(e),i=u(r,t.getProperty(r,"inferenceRule")),a=c(i);if(t.getProperty(a,"inference")){let t=g(a);if(t){b(o,a,-t);let n=P(e,r,!1);b(o,e,t-n)}}let l=d(i);if(null==t.getProperty(l,"inference"))continue;let f=g(l,!0);b(o,l,-f,!0);let p,M=P(e,r,!0),x=t.getProperty(e,"maxAdjust");if(null!=x&&(f=Math.max(f,x)),n||!(p=m(e))){b(o,t.getProperty(e,"proof")?e:e.parent,f-M,!0);continue}let w=h(p);if(w){const t=o.nodeFactory.create("node","mspace",[],{width:f-M+"em"});w.appendChild(t),e.removeProperty("maxAdjust");continue}let _=y(p);_&&(f=t.getProperty(_,"maxAdjust")?Math.max(t.getProperty(_,"maxAdjust"),f):f,t.setProperty(_,"maxAdjust",f))}};let v={bspr_maxAdjust:!0};t.setProperty=function(e,t,o){n.default.setProperty(e,"bspr_"+t,o)},t.getProperty=function(e,t){return n.default.getProperty(e,"bspr_"+t)},t.removeProperty=function(e,t){e.removeProperty("bspr_"+t)},t.makeBsprAttributes=function(e){e.data.root.walkTree((e,t)=>{let o=[];e.getPropertyNames().forEach(t=>{!v[t]&&t.match(RegExp("^bspr_"))&&o.push(t+":"+e.getProperty(t))}),o.length&&n.default.setAttribute(e,"semantics",o.join(";"))})},t.saveDocument=function(e){if(i=e.document,!("getBBox"in i.outputJax))throw Error("The bussproofs extension requires an output jax with a getBBox() method")},t.clearDocument=function(e){i=null}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProofTreeItem=void 0;const n=o(3),r=o(8),i=o(9),a=o(0);class l extends r.BaseItem{constructor(){super(...arguments),this.leftLabel=null,this.rigthLabel=null,this.innerStack=new i.default(this.factory,{},!0)}get kind(){return"proofTree"}checkItem(e){if(e.isKind("end")&&"prooftree"===e.getName()){let t=this.toMml();return a.setProperty(t,"proof",!0),[[this.factory.create("mml",t),e],!0]}if(e.isKind("stop"))throw new n.default("EnvMissingEnd","Missing \\end{%1}",this.getName());return this.innerStack.Push(e),r.BaseItem.fail}toMml(){const e=super.toMml(),t=this.innerStack.Top();if(t.isKind("start")&&!t.Size())return e;this.innerStack.Push(this.factory.create("stop"));let o=this.innerStack.Top().toMml();return this.create("node","mrow",[o,e],{})}}t.ProofTreeItem=l},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(3),r=o(12),i=o(4),a=o(0);let l={Prooftree:function(e,t){return e.Push(t),e.itemFactory.create("proofTree").setProperties({name:t.getName(),line:"solid",currentLine:"solid",rootAtTop:!1})},Axiom:function(e,t){let o=e.stack.Top();if("proofTree"!==o.kind)throw new n.default("IllegalProofCommand","Proof commands only allowed in prooftree environment.");let r=s(e,e.GetArgument(t));a.setProperty(r,"axiom",!0),o.Push(r)}};const s=function(e,t){let o=i.default.internalMath(e,i.default.trimSpaces(t),0);if(!o[0].childNodes[0].childNodes.length)return e.create("node","mrow",[]);let n=e.create("node","mspace",[],{width:".5ex"}),r=e.create("node","mspace",[],{width:".5ex"});return e.create("node","mrow",[n,...o,r])};function u(e,t,o,n,r,i,l){const s=e.create("node","mtr",[e.create("node","mtd",[t],{})],{}),u=e.create("node","mtr",[e.create("node","mtd",o,{})],{});let f,c,d,p,m=e.create("node","mtable",l?[u,s]:[s,u],{align:"top 2",rowlines:i,framespacing:"0 0"});if(a.setProperty(m,"inferenceRule",l?"up":"down"),n&&(f=e.create("node","mpadded",[n],{height:"+.5em",width:"+.5em",voffset:"-.15em"}),a.setProperty(f,"prooflabel","left")),r&&(c=e.create("node","mpadded",[r],{height:"+.5em",width:"+.5em",voffset:"-.15em"}),a.setProperty(c,"prooflabel","right")),n&&r)d=[f,m,c],p="both";else if(n)d=[f,m],p="left";else{if(!r)return m;d=[m,c],p="right"}return m=e.create("node","mrow",d),a.setProperty(m,"labelledRule",p),m}function f(e,t){if("$"!==e.GetNext())throw new n.default("IllegalUseOfCommand","Use of %1 does not match it's definition.",t);e.i++;let o=e.GetUpTo(t,"$");if(-1===o.indexOf("\\fCenter"))throw new n.default("IllegalUseOfCommand","Missing \\fCenter in %1.",t);let[i,l]=o.split("\\fCenter"),s=new r.default(i,e.stack.env,e.configuration).mml(),u=new r.default(l,e.stack.env,e.configuration).mml(),f=new r.default("\\fCenter",e.stack.env,e.configuration).mml();const c=e.create("node","mtd",[s],{}),d=e.create("node","mtd",[f],{}),p=e.create("node","mtd",[u],{}),m=e.create("node","mtr",[c,d,p],{}),h=e.create("node","mtable",[m],{columnspacing:".5ex",columnalign:"center 2"});return a.setProperty(h,"sequent",!0),e.configuration.addNode("sequent",m),h}l.Inference=function(e,t,o){let r=e.stack.Top();if("proofTree"!==r.kind)throw new n.default("IllegalProofCommand","Proof commands only allowed in prooftree environment.");if(r.Size()<o)throw new n.default("BadProofTree","Proof tree badly specified.");const i=r.getProperty("rootAtTop"),l=1!==o||r.Peek()[0].childNodes.length?o:0;let f=[];do{f.length&&f.unshift(e.create("node","mtd",[],{})),f.unshift(e.create("node","mtd",[r.Pop()],{rowalign:i?"top":"bottom"})),o--}while(o>0);let c=e.create("node","mtr",f,{}),d=e.create("node","mtable",[c],{framespacing:"0 0"}),p=s(e,e.GetArgument(t)),m=r.getProperty("currentLine");m!==r.getProperty("line")&&r.setProperty("currentLine",r.getProperty("line"));let h=u(e,d,[p],r.getProperty("left"),r.getProperty("right"),m,i);r.setProperty("left",null),r.setProperty("right",null),a.setProperty(h,"inference",l),e.configuration.addNode("inference",h),r.Push(h)},l.Label=function(e,t,o){let r=e.stack.Top();if("proofTree"!==r.kind)throw new n.default("IllegalProofCommand","Proof commands only allowed in prooftree environment.");let a=i.default.internalMath(e,e.GetArgument(t),0),l=a.length>1?e.create("node","mrow",a,{}):a[0];r.setProperty(o,l)},l.SetLine=function(e,t,o,r){let i=e.stack.Top();if("proofTree"!==i.kind)throw new n.default("IllegalProofCommand","Proof commands only allowed in prooftree environment.");i.setProperty("currentLine",o),r&&i.setProperty("line",o)},l.RootAtTop=function(e,t,o){let r=e.stack.Top();if("proofTree"!==r.kind)throw new n.default("IllegalProofCommand","Proof commands only allowed in prooftree environment.");r.setProperty("rootAtTop",o)},l.AxiomF=function(e,t){let o=e.stack.Top();if("proofTree"!==o.kind)throw new n.default("IllegalProofCommand","Proof commands only allowed in prooftree environment.");let r=f(e,t);a.setProperty(r,"axiom",!0),o.Push(r)},l.FCenter=function(e,t){},l.InferenceF=function(e,t,o){let r=e.stack.Top();if("proofTree"!==r.kind)throw new n.default("IllegalProofCommand","Proof commands only allowed in prooftree environment.");if(r.Size()<o)throw new n.default("BadProofTree","Proof tree badly specified.");const i=r.getProperty("rootAtTop"),l=1!==o||r.Peek()[0].childNodes.length?o:0;let s=[];do{s.length&&s.unshift(e.create("node","mtd",[],{})),s.unshift(e.create("node","mtd",[r.Pop()],{rowalign:i?"top":"bottom"})),o--}while(o>0);let c=e.create("node","mtr",s,{}),d=e.create("node","mtable",[c],{framespacing:"0 0"}),p=f(e,t),m=r.getProperty("currentLine");m!==r.getProperty("line")&&r.setProperty("currentLine",r.getProperty("line"));let h=u(e,d,[p],r.getProperty("left"),r.getProperty("right"),m,i);r.setProperty("left",null),r.setProperty("right",null),a.setProperty(h,"inference",l),e.configuration.addNode("inference",h),r.Push(h)},t.default=l},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=MathJax._.input.tex.TexError.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=MathJax._.input.tex.ParseUtil.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isObject=MathJax._.components.global.isObject,t.combineConfig=MathJax._.components.global.combineConfig,t.combineDefaults=MathJax._.components.global.combineDefaults,t.combineWithMathJax=MathJax._.components.global.combineWithMathJax,t.MathJax=MathJax._.components.global.MathJax},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BussproofsConfiguration=void 0;const n=o(7),r=o(1),i=o(0);o(11),t.BussproofsConfiguration=n.Configuration.create("bussproofs",{handler:{macro:["Bussproofs-macros"],environment:["Bussproofs-environments"]},items:{[r.ProofTreeItem.prototype.kind]:r.ProofTreeItem},preprocessors:[[i.saveDocument,1]],postprocessors:[[i.clearDocument,3],[i.makeBsprAttributes,2],[i.balanceRules,1]]})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Configuration=MathJax._.input.tex.Configuration.Configuration,t.ConfigurationHandler=MathJax._.input.tex.Configuration.ConfigurationHandler,t.ParserConfiguration=MathJax._.input.tex.Configuration.ParserConfiguration},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MmlStack=MathJax._.input.tex.StackItem.MmlStack,t.BaseItem=MathJax._.input.tex.StackItem.BaseItem},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=MathJax._.input.tex.Stack.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=MathJax._.input.tex.NodeUtil.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(2),r=o(13),i=o(14);new i.CommandMap("Bussproofs-macros",{AxiomC:"Axiom",UnaryInfC:["Inference",1],BinaryInfC:["Inference",2],TrinaryInfC:["Inference",3],QuaternaryInfC:["Inference",4],QuinaryInfC:["Inference",5],RightLabel:["Label","right"],LeftLabel:["Label","left"],AXC:"Axiom",UIC:["Inference",1],BIC:["Inference",2],TIC:["Inference",3],RL:["Label","right"],LL:["Label","left"],noLine:["SetLine","none",!1],singleLine:["SetLine","solid",!1],solidLine:["SetLine","solid",!1],dashedLine:["SetLine","dashed",!1],alwaysNoLine:["SetLine","none",!0],alwaysSingleLine:["SetLine","solid",!0],alwaysSolidLine:["SetLine","solid",!0],alwaysDashedLine:["SetLine","dashed",!0],rootAtTop:["RootAtTop",!0],alwaysRootAtTop:["RootAtTop",!0],rootAtBottom:["RootAtTop",!1],alwaysRootAtBottom:["RootAtTop",!1],fCenter:"FCenter",Axiom:"AxiomF",UnaryInf:["InferenceF",1],BinaryInf:["InferenceF",2],TrinaryInf:["InferenceF",3],QuaternaryInf:["InferenceF",4],QuinaryInf:["InferenceF",5]},n.default),new i.EnvironmentMap("Bussproofs-environments",r.default.environment,{prooftree:["Prooftree",null,!1]},n.default)},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=MathJax._.input.tex.TexParser.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=MathJax._.input.tex.ParseMethods.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AbstractSymbolMap=MathJax._.input.tex.SymbolMap.AbstractSymbolMap,t.RegExpMap=MathJax._.input.tex.SymbolMap.RegExpMap,t.AbstractParseMap=MathJax._.input.tex.SymbolMap.AbstractParseMap,t.CharacterMap=MathJax._.input.tex.SymbolMap.CharacterMap,t.DelimiterMap=MathJax._.input.tex.SymbolMap.DelimiterMap,t.MacroMap=MathJax._.input.tex.SymbolMap.MacroMap,t.CommandMap=MathJax._.input.tex.SymbolMap.CommandMap,t.EnvironmentMap=MathJax._.input.tex.SymbolMap.EnvironmentMap},function(e,t,o){"use strict";o.r(t);var n=o(5),r=o(6),i=o(1),a=o(2),l=o(0);Object(n.combineWithMathJax)({_:{input:{tex:{bussproofs:{BussproofsConfiguration:r,BussproofsItems:i,BussproofsMethods:a,BussproofsUtil:l}}}}})}]);